(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     77307,       2059]
NotebookOptionsPosition[     76152,       2032]
NotebookOutlinePosition[     76552,       2048]
CellTagsIndexPosition[     76509,       2045]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Nova Scotia Epidemic", "Title"]], "Subsubsection",
 CellChangeTimes->{{3.795546515923991*^9, 3.7955465225717773`*^9}, {
   3.797097197993951*^9, 3.797097199761539*^9}, 
   3.797165326096985*^9},ExpressionUUID->"962fa068-efd9-4cb9-a1d4-\
84633c2d579c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "SetDirectory", "[", "\"\</shared/OneDrive/code/github/NSCovid19/\>\"", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rawdata", " ", "=", " ", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<Canada Population Q1 2020.xlsx\>\"", "]"}], 
    "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CanPop", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", " ", "rawdata"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], " ", "&"}], "/@", " ", "rawdata"}]}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CanPop", "//", "TableForm"}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"csvfiles", " ", "=", " ", 
    RowBox[{"FileNames", "[", "\"\<*.csv\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rawdata", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{"csvfiles", "[", 
      RowBox[{"[", 
       RowBox[{"Length", "[", "csvfiles", "]"}], "]"}], "]"}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nsdata", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "\[LessEqual]", " ", 
      RowBox[{"Length", "[", "rawdata", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rawdata", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], " ", "==", " ", "12"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
         RowBox[{"nsdata", ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"DateList", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rawdata", "[", 
                RowBox[{"[", 
                 RowBox[{"n", ",", "4"}], "]"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Day\>\"", ",", " ", "\"\<Month\>\"", ",", " ", 
                 "\"\<Year\>\""}], "}"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"rawdata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "5"}], "]"}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"rawdata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "6"}], "]"}], "]"}], ",", " ", 
            RowBox[{"rawdata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "7"}], "]"}], "]"}], ",", " ", 
            RowBox[{"rawdata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "8"}], "]"}], "]"}], ",", " ", 
            RowBox[{"rawdata", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "9"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
           "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        "Null", ",", "Null"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"nsdata", "[", 
      RowBox[{"[", "3", "]"}], "]"}], " ", "is", " ", "empty"}], ";", " ", 
    RowBox[{"drop", " ", "it"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nsdata", " ", "=", " ", 
    RowBox[{"Drop", "[", 
     RowBox[{"nsdata", ",", " ", 
      RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"headings", " ", "=", " ", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"rawdata", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "3"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{"{", 
      RowBox[{"headings", ",", 
       RowBox[{"Transpose", "[", "nsdata", "]"}]}], "}"}], "]"}], "//", 
    "TableForm"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Data length:\>\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Length", "[", "nsdata", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dates", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
     "nsdata"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Elapsed Times\>\"", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ElapsedTimes", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DayCount", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dates", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        RowBox[{"dates", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "dates", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ninfections", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "5", "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
     "nsdata"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nsdataplot", " ", "=", " ", 
    RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"ElapsedTimes", ",", "ninfections"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Blue"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Days since March 16, 2020\>\"", ",", " ", "\"\<Infections\>\""}],
         "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", " ", "\[Rule]", " ", 
       "\"\<Nova Scotia; Infections vs. Time\\nwith 5th Order Polynomial \
Fit\>\""}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nsdatafit", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"ElapsedTimes", ",", "ninfections"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x", ",", 
       RowBox[{"x", "^", "2"}], ",", 
       RowBox[{"x", "^", "3"}], ",", 
       RowBox[{"x", "^", "4"}], ",", " ", 
       RowBox[{"x", "^", "5"}]}], "}"}], ",", " ", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nsdatafitplot", " ", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{"nsdataplot", ",", " ", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Normal", "[", "nsdatafit", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"ElapsedTimes", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
         RowBox[{"Last", "[", "ElapsedTimes", "]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Black"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dnsdatafit", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Normal", "[", "nsdatafit", "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dnsdatafitplot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{"dnsdatafit", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"ElapsedTimes", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"ElapsedTimes", "[", 
        RowBox[{"[", 
         RowBox[{"Length", "[", "ElapsedTimes", "]"}], "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", " ", "\[Rule]", " ", "Red"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Days since March 16, 2020\>\"", ",", " ", "\"\<Infections\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", " ", "\[Rule]", " ", 
      "\"\<Derivative: Nova Scotia Infections vs. Time\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lineardata", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "]"}], " ", "&"}], " ", "/@", " ", 
    "nsdata"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lineardata", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"ElapsedTimes", ",", " ", "lineardata"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lineardataplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{"lineardata", ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", " ", "Black"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Days since March 16, 2020\>\"", ",", " ", 
       "\"\<Ln Infections\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "PlotLabel", " ", "\[Rule]", " ", 
     "\"\<Ln Infections vs. Time; Nova Scotia\>\""}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.794562911392267*^9, 3.7945629408906918`*^9}, {
   3.794580519145265*^9, 3.794580526885198*^9}, {3.794580586730112*^9, 
   3.794580637351708*^9}, 3.79458066893534*^9, {3.794580702767119*^9, 
   3.794580719415246*^9}, 3.794580855598672*^9, {3.7945808907482433`*^9, 
   3.794580947629612*^9}, {3.794580989663232*^9, 3.794581042975284*^9}, {
   3.794585203760963*^9, 3.7945852896334257`*^9}, {3.794585320442211*^9, 
   3.7945854009557867`*^9}, {3.794585460784474*^9, 3.79458557529513*^9}, {
   3.7945914986391907`*^9, 3.794591505015935*^9}, {3.794591568143227*^9, 
   3.7945916113913803`*^9}, {3.794591648196568*^9, 3.794591688870829*^9}, {
   3.794591732502266*^9, 3.794591732996397*^9}, {3.794595837707015*^9, 
   3.794595838842977*^9}, {3.794595881862438*^9, 3.794595883227086*^9}, {
   3.794595917831256*^9, 3.7945959189779463`*^9}, {3.794596011611627*^9, 
   3.794596073453456*^9}, {3.794596129556327*^9, 3.79459617648522*^9}, {
   3.79459620950546*^9, 3.7945962139114933`*^9}, 3.794596264533889*^9, {
   3.794596364645379*^9, 3.794596483637156*^9}, {3.7945966632113333`*^9, 
   3.79459669441175*^9}, {3.794736363700871*^9, 3.7947363793150473`*^9}, {
   3.794738482203816*^9, 3.794738485314714*^9}, {3.794738699744493*^9, 
   3.79473876923907*^9}, {3.794738813891588*^9, 3.794738816814829*^9}, {
   3.794738862833416*^9, 3.7947388698464622`*^9}, 3.7947390219301662`*^9, {
   3.7947391571509743`*^9, 3.794739165642439*^9}, {3.7947400123077793`*^9, 
   3.7947400950790253`*^9}, {3.794740126230762*^9, 3.7947401289914303`*^9}, {
   3.7947401784853487`*^9, 3.7947401944440937`*^9}, {3.794740244805655*^9, 
   3.794740273893827*^9}, {3.7948275264383783`*^9, 3.794827577836412*^9}, {
   3.794827611740369*^9, 3.794827629561495*^9}, {3.79482776659361*^9, 
   3.7948277668688183`*^9}, {3.794827802253645*^9, 3.794827803773711*^9}, {
   3.794827886210483*^9, 3.794827899686062*^9}, {3.794828027560177*^9, 
   3.794828032215992*^9}, {3.794828076867269*^9, 3.794828081591249*^9}, {
   3.7949474300409*^9, 3.794947451814637*^9}, {3.7949475935256367`*^9, 
   3.794947596323533*^9}, {3.79494762716468*^9, 3.7949476556483707`*^9}, 
   3.794947765598733*^9, {3.794950770110841*^9, 3.794950770286992*^9}, {
   3.794951340743021*^9, 3.794951373390256*^9}, {3.794951440776578*^9, 
   3.794951480848332*^9}, 3.794951620629179*^9, {3.7949936953783627`*^9, 
   3.794993750564598*^9}, {3.796037691960272*^9, 3.796037745288631*^9}, {
   3.796038632402001*^9, 3.79603863808646*^9}, {3.796039577365733*^9, 
   3.7960395898436327`*^9}, {3.796654941319956*^9, 3.796654946208943*^9}, {
   3.797159549584024*^9, 3.7971595646192513`*^9}, 3.797159599971449*^9, 
   3.797159840350074*^9, {3.797159920206868*^9, 3.797159930614871*^9}, {
   3.797160044711464*^9, 3.797160064958132*^9}, {3.797160097705193*^9, 
   3.7971602552673817`*^9}, {3.79716392907267*^9, 3.797164127709071*^9}, {
   3.7971648564940166`*^9, 3.797165016931384*^9}, 3.797165050108058*^9, {
   3.797165395834599*^9, 3.797165551372332*^9}, {3.797165649153475*^9, 
   3.797165672371305*^9}, {3.7971657641375217`*^9, 3.797165764351676*^9}, {
   3.797165801472842*^9, 3.797165802323598*^9}, {3.797165925686307*^9, 
   3.797165944376951*^9}, {3.7971659793089857`*^9, 3.797165998968891*^9}, {
   3.7971660318755817`*^9, 3.797166068887076*^9}, {3.7971661120170517`*^9, 
   3.797166136042062*^9}, {3.797166519876936*^9, 3.797166538019212*^9}, {
   3.797166595661824*^9, 3.797166603597807*^9}, {3.7971675888950768`*^9, 
   3.797167590738068*^9}, {3.79716773674798*^9, 3.7971677459738503`*^9}, 
   3.7971725714584913`*^9, {3.797173269859363*^9, 3.797173298083119*^9}, {
   3.8052808270976353`*^9, 3.805280836656406*^9}, 3.805713250053162*^9, {
   3.805713349954681*^9, 3.805713382567782*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8434aa7e-9c92-4c72-a328-54930258540d"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"date\"\>", "\<\"numconf\"\>", "\<\"numprob\"\>", \
"\<\"numdeaths\"\>", "\<\"numtotal\"\>", "\<\"numtested\"\>", "\<\"numrecover\
\"\>", "\<\"percentrecover\"\>", "\<\"ratetested\"\>", "\<\"numtoday\"\>", \
"\<\"percentoday\"\>", "\<\"ratetotal\"\>", "\<\"ratedeaths\"\>", \
"\<\"deathstoday\"\>", "\<\"percentdeath\"\>", "\<\"testedtoday\"\>", \
"\<\"recoveredtoday\"\>", "\<\"percentactive\"\>", "\<\"numactive\"\>", \
"\<\"rateactive\"\>", "\<\"numtotal_last14\"\>", "\<\"ratetotal_last14\"\>", \
"\<\"numdeaths_last14\"\>", "\<\"ratedeaths_last14\"\>"},
    {GridBox[{
       {"2020", "3", "11", "0", "0", "0.`"},
       {"2020", "3", "12", "0", "0", "0.`"},
       {"2020", "3", "14", "0", "0", "0.`"},
       {"2020", "3", "15", "0", "0", "0.`"},
       {"2020", "3", "16", "0", "0", "0.`"},
       {"2020", "3", "17", "0", "0", "0.`"},
       {"2020", "3", "18", "0", "0", "0.`"},
       {"2020", "3", "19", "0", "0", "0.`"},
       {"2020", "3", "20", "0", "0", "0.`"},
       {"2020", "3", "21", "0", "0", "0.`"},
       {"2020", "3", "22", "0", "0", "0.`"},
       {"2020", "3", "23", "0", "0", "0.`"},
       {"2020", "3", "24", "0", "0", "0.`"},
       {"2020", "3", "25", "0", "0", "0.`"},
       {"2020", "3", "26", "0", "0", "0.`"},
       {"2020", "3", "27", "0", "0", "0.`"},
       {"2020", "3", "28", "0", "0", "0.`"},
       {"2020", "3", "29", "0", "0", "0.`"},
       {"2020", "3", "30", "0", "0", "0.`"},
       {"2020", "3", "31", "0", "0", "0.`"},
       {"2020", "4", "1", "0", "0", "0.`"},
       {"2020", "4", "2", "0", "0", "0.`"},
       {"2020", "4", "3", "0", "0", "0.`"},
       {"2020", "4", "4", "0", "0", "0.`"},
       {"2020", "4", "5", "0", "0", "0.`"},
       {"2020", "4", "6", "0", "0", "0.`"},
       {"2020", "4", "7", "0", "0", "0.`"},
       {"2020", "4", "8", "0", "0", "0.`"},
       {"2020", "4", "9", "0", "0", "0.`"},
       {"2020", "4", "10", "0", "0", "0.`"},
       {"2020", "4", "11", "0", "0", "0.`"},
       {"2020", "4", "12", "0", "0", "0.`"},
       {"2020", "4", "13", "0", "0", "0.`"},
       {"2020", "4", "14", "0", "0", "0.`"},
       {"2020", "4", "15", "0", "0", "0.`"},
       {"2020", "4", "16", "0", "0", "0.`"},
       {"2020", "4", "17", "0", "0", "0.`"},
       {"2020", "4", "18", "0", "0", "0.`"},
       {"2020", "4", "19", "0", "0", "0.`"},
       {"2020", "4", "20", "0", "0", "0.`"},
       {"2020", "4", "21", "0", "0", "0.`"},
       {"2020", "4", "22", "0", "0", "0.`"},
       {"2020", "4", "23", "0", "0", "0.`"},
       {"2020", "4", "24", "0", "0", "0.`"},
       {"2020", "4", "25", "0", "0", "0.`"},
       {"2020", "4", "26", "0", "0", "0.`"},
       {"2020", "4", "27", "0", "0", "0.`"},
       {"2020", "4", "28", "0", "0", "0.`"},
       {"2020", "4", "29", "0", "0", "0.`"},
       {"2020", "4", "30", "0", "0", "0.`"},
       {"2020", "5", "1", "0", "0", "0.`"},
       {"2020", "5", "2", "0", "0", "0.`"},
       {"2020", "5", "3", "0", "0", "0.`"},
       {"2020", "5", "4", "0", "0", "0.`"},
       {"2020", "5", "5", "0", "0", "0.`"},
       {"2020", "5", "6", "0", "0", "0.`"},
       {"2020", "5", "7", "0", "0", "0.`"},
       {"2020", "5", "8", "0", "0", "0.`"},
       {"2020", "5", "9", "0", "0", "0.`"},
       {"2020", "5", "10", "0", "0", "0.`"},
       {"2020", "5", "11", "0", "0", "0.`"},
       {"2020", "5", "12", "0", "0", "0.`"},
       {"2020", "5", "13", "0", "0", "0.`"},
       {"2020", "5", "14", "0", "0", "0.`"},
       {"2020", "5", "15", "0", "0", "0.`"},
       {"2020", "5", "16", "0", "0", "0.`"},
       {"2020", "5", "17", "0", "0", "0.`"},
       {"2020", "5", "18", "0", "0", "0.`"},
       {"2020", "5", "19", "0", "0", "0.`"},
       {"2020", "5", "20", "0", "0", "0.`"},
       {"2020", "5", "21", "0", "0", "0.`"},
       {"2020", "5", "22", "0", "0", "0.`"},
       {"2020", "5", "23", "0", "0", "0.`"},
       {"2020", "5", "24", "0", "0", "0.`"},
       {"2020", "5", "25", "0", "0", "0.`"},
       {"2020", "5", "26", "0", "0", "0.`"},
       {"2020", "5", "27", "0", "0", "0.`"},
       {"2020", "5", "28", "0", "0", "0.`"},
       {"2020", "5", "29", "0", "0", "0.`"},
       {"2020", "5", "30", "0", "0", "0.`"},
       {"2020", "5", "31", "0", "0", "0.`"},
       {"2020", "6", "1", "0", "0", "0.`"},
       {"2020", "6", "2", "0", "0", "0.`"},
       {"2020", "6", "3", "0", "0", "0.`"},
       {"2020", "6", "4", "0", "0", "0.`"},
       {"2020", "6", "5", "0", "0", "0.`"},
       {"2020", "6", "6", "0", "0", "0.`"},
       {"2020", "6", "7", "0", "0", "0.`"},
       {"2020", "6", "8", "0", "0", "0.`"},
       {"2020", "6", "9", "0", "0", "0.`"},
       {"2020", "6", "10", "0", "0", "0.`"},
       {"2020", "6", "11", "0", "0", "0.`"},
       {"2020", "6", "12", "0", "0", "0.`"},
       {"2020", "6", "13", "0", "0", "0.`"},
       {"2020", "6", "14", "0", "0", "0.`"},
       {"2020", "6", "15", "0", "0", "0.`"},
       {"2020", "6", "16", "0", "0", "0.`"},
       {"2020", "6", "17", "0", "0", "0.`"},
       {"2020", "6", "18", "0", "0", "0.`"},
       {"2020", "6", "19", "0", "0", "0.`"},
       {"2020", "6", "20", "0", "0", "0.`"},
       {"2020", "6", "21", "0", "0", "0.`"},
       {"2020", "6", "22", "0", "0", "0.`"},
       {"2020", "6", "23", "0", "0", "0.`"},
       {"2020", "6", "24", "0", "0", "0.`"},
       {"2020", "6", "25", "0", "0", "0.`"},
       {"2020", "6", "26", "0", "0", "0.`"},
       {"2020", "6", "27", "0", "0", "0.`"},
       {"2020", "6", "28", "0", "0", "0.`"},
       {"2020", "6", "29", "0", "0", "0.`"},
       {"2020", "6", "30", "0", "0", "0.`"},
       {"2020", "7", "1", "0", "0", "0.`"},
       {"2020", "7", "2", "0", "0", "0.`"},
       {"2020", "7", "3", "0", "0", "0.`"},
       {"2020", "7", "4", "0", "0", "0.`"},
       {"2020", "7", "5", "0", "0", "0.`"},
       {"2020", "7", "6", "0", "0", "0.`"},
       {"2020", "7", "7", "0", "0", "0.`"},
       {"2020", "7", "8", "0", "0", "0.`"},
       {"2020", "7", "9", "0", "0", "0.`"},
       {"2020", "7", "10", "0", "0", "0.`"},
       {"2020", "7", "11", "0", "0", "0.`"},
       {"2020", "7", "12", "0", "0", "0.`"},
       {"2020", "7", "13", "0", "0", "0.`"},
       {"2020", "7", "14", "0", "0", "0.`"},
       {"2020", "7", "15", "0", "0", "0.`"},
       {"2020", "7", "16", "0", "0", "0.`"},
       {"2020", "7", "17", "0", "0", "0.`"},
       {"2020", "7", "18", "0", "0", "0.`"},
       {"2020", "7", "19", "0", "0", "0.`"},
       {"2020", "7", "20", "0", "0", "0.`"},
       {"2020", "7", "21", "0", "0", "0.`"},
       {"2020", "7", "22", "0", "0", "0.`"},
       {"2020", "7", "23", "0", "0", "0.`"},
       {"2020", "7", "24", "0", "0", "0.`"},
       {"2020", "7", "25", "0", "0", "0.`"},
       {"2020", "7", "26", "0", "0", "0.`"},
       {"2020", "7", "27", "0", "0", "0.`"},
       {"2020", "7", "28", "0", "0", "0.`"},
       {"2020", "7", "29", "0", "0", "0.`"},
       {"2020", "7", "30", "0", "0", "0.`"},
       {"2020", "7", "31", "0", "0", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"1"},
       {"5"},
       {"5"},
       {"9"},
       {"28"},
       {"41"},
       {"51"},
       {"68"},
       {"73"},
       {"90"},
       {"110"},
       {"122"},
       {"127"},
       {"147"},
       {"173"},
       {"193"},
       {"207"},
       {"236"},
       {"262"},
       {"293"},
       {"310"},
       {"342"},
       {"373"},
       {"407"},
       {"428"},
       {"445"},
       {"474"},
       {"517"},
       {"549"},
       {"579"},
       {"606"},
       {"649"},
       {"675"},
       {"721"},
       {"737"},
       {"772"},
       {"827"},
       {"850"},
       {"865"},
       {"873"},
       {"900"},
       {"915"},
       {"935"},
       {"947"},
       {"959"},
       {"963"},
       {"971"},
       {"985"},
       {"991"},
       {"998"},
       {"1007"},
       {"1008"},
       {"1011"},
       {"1018"},
       {"1019"},
       {"1020"},
       {"1024"},
       {"1026"},
       {"1034"},
       {"1037"},
       {"1040"},
       {"1043"},
       {"1044"},
       {"1045"},
       {"1046"},
       {"1048"},
       {"1049"},
       {"1050"},
       {"1051"},
       {"1052"},
       {"1053"},
       {"1055"},
       {"1055"},
       {"1056"},
       {"1056"},
       {"1057"},
       {"1057"},
       {"1058"},
       {"1058"},
       {"1058"},
       {"1058"},
       {"1059"},
       {"1059"},
       {"1060"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1062"},
       {"1062"},
       {"1064"},
       {"1064"},
       {"1064"},
       {"1064"},
       {"1065"},
       {"1065"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1069"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"3"},
       {"5"},
       {"6"},
       {"9"},
       {"10"},
       {"12"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"1"},
       {"2"},
       {"2"},
       {"2"},
       {"2"},
       {"3"},
       {"3"},
       {"3"},
       {"3"},
       {"4"},
       {"7"},
       {"9"},
       {"9"},
       {"10"},
       {"12"},
       {"16"},
       {"16"},
       {"22"},
       {"24"},
       {"24"},
       {"27"},
       {"28"},
       {"28"},
       {"29"},
       {"31"},
       {"37"},
       {"38"},
       {"41"},
       {"41"},
       {"44"},
       {"46"},
       {"47"},
       {"47"},
       {"48"},
       {"48"},
       {"51"},
       {"51"},
       {"55"},
       {"55"},
       {"55"},
       {"55"},
       {"56"},
       {"57"},
       {"58"},
       {"58"},
       {"58"},
       {"58"},
       {"58"},
       {"59"},
       {"59"},
       {"59"},
       {"59"},
       {"60"},
       {"60"},
       {"60"},
       {"60"},
       {"60"},
       {"61"},
       {"61"},
       {"61"},
       {"61"},
       {"61"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"62"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"63"},
       {"64"},
       {"64"},
       {"64"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"0"},
       {"0"},
       {"0"},
       {"0"},
       {"3"},
       {"5"},
       {"7"},
       {"14"},
       {"15"},
       {"21"},
       {"28"},
       {"41"},
       {"51"},
       {"68"},
       {"73"},
       {"90"},
       {"110"},
       {"122"},
       {"127"},
       {"147"},
       {"173"},
       {"193"},
       {"207"},
       {"236"},
       {"262"},
       {"293"},
       {"310"},
       {"342"},
       {"373"},
       {"407"},
       {"428"},
       {"445"},
       {"474"},
       {"517"},
       {"549"},
       {"579"},
       {"606"},
       {"649"},
       {"675"},
       {"721"},
       {"737"},
       {"772"},
       {"827"},
       {"850"},
       {"865"},
       {"873"},
       {"900"},
       {"915"},
       {"935"},
       {"947"},
       {"959"},
       {"963"},
       {"971"},
       {"985"},
       {"991"},
       {"998"},
       {"1007"},
       {"1008"},
       {"1011"},
       {"1018"},
       {"1019"},
       {"1020"},
       {"1024"},
       {"1026"},
       {"1034"},
       {"1037"},
       {"1040"},
       {"1043"},
       {"1044"},
       {"1045"},
       {"1046"},
       {"1048"},
       {"1049"},
       {"1050"},
       {"1051"},
       {"1052"},
       {"1053"},
       {"1055"},
       {"1055"},
       {"1056"},
       {"1056"},
       {"1057"},
       {"1057"},
       {"1058"},
       {"1058"},
       {"1058"},
       {"1058"},
       {"1059"},
       {"1059"},
       {"1060"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1061"},
       {"1062"},
       {"1062"},
       {"1064"},
       {"1064"},
       {"1064"},
       {"1064"},
       {"1065"},
       {"1065"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1066"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1067"},
       {"1069"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], GridBox[{
       {"103"},
       {"182"},
       {"481"},
       {"481"},
       {"1075"},
       {"1075"},
       {"1278"},
       {"1520"},
       {"1647"},
       {"1956"},
       {"2210"},
       {"2408"},
       {"2641"},
       {"3008"},
       {"3417"},
       {"3946"},
       {"4487"},
       {"4984"},
       {"5492"},
       {"6614"},
       {"7405"},
       {"8059"},
       {"8799"},
       {"9722"},
       {"10084"},
       {"10738"},
       {"11559"},
       {"12072"},
       {"13045"},
       {"13881"},
       {"14511"},
       {"15329"},
       {"16548"},
       {"17477"},
       {"18245"},
       {"19239"},
       {"20432"},
       {"21363"},
       {"22029"},
       {"22669"},
       {"23261"},
       {"24155"},
       {"24884"},
       {"25658"},
       {"26320"},
       {"26871"},
       {"27437"},
       {"28108"},
       {"28731"},
       {"29421"},
       {"30149"},
       {"30774"},
       {"31192"},
       {"31571"},
       {"32146"},
       {"32869"},
       {"33541"},
       {"34081"},
       {"34531"},
       {"34820"},
       {"35023"},
       {"35430"},
       {"35811"},
       {"36192"},
       {"36587"},
       {"36916"},
       {"37183"},
       {"37406"},
       {"37594"},
       {"37932"},
       {"38275"},
       {"38613"},
       {"38972"},
       {"39330"},
       {"39836"},
       {"40334"},
       {"41075"},
       {"41783"},
       {"42309"},
       {"42904"},
       {"43287"},
       {"43676"},
       {"44180"},
       {"44644"},
       {"45224"},
       {"45709"},
       {"46379"},
       {"46688"},
       {"47017"},
       {"47489"},
       {"47962"},
       {"48411"},
       {"49024"},
       {"49644"},
       {"50066"},
       {"50313"},
       {"50516"},
       {"50893"},
       {"51358"},
       {"51658"},
       {"51943"},
       {"52229"},
       {"52360"},
       {"52649"},
       {"52936"},
       {"53385"},
       {"53672"},
       {"53930"},
       {"54175"},
       {"54382"},
       {"54664"},
       {"54664"},
       {"55116"},
       {"55439"},
       {"55930"},
       {"56032"},
       {"56236"},
       {"56551"},
       {"56942"},
       {"57351"},
       {"57738"},
       {"58100"},
       {"58419"},
       {"58799"},
       {"59074"},
       {"59440"},
       {"59854"},
       {"60250"},
       {"60546"},
       {"60915"},
       {"61198"},
       {"61477"},
       {"61828"},
       {"62365"},
       {"62752"},
       {"63040"},
       {"63313"},
       {"63458"},
       {"63702"},
       {"63987"},
       {"64339"},
       {"64777"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[
          0.2]}}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\
\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", \
"\<\"\"\>", "\<\"\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{
    "date", "numconf", "numprob", "numdeaths", "numtotal", "numtested", 
     "numrecover", "percentrecover", "ratetested", "numtoday", "percentoday", 
     "ratetotal", "ratedeaths", "deathstoday", "percentdeath", "testedtoday", 
     "recoveredtoday", "percentactive", "numactive", "rateactive", 
     "numtotal_last14", "ratetotal_last14", "numdeaths_last14", 
     "ratedeaths_last14"}, {{{2020, 3, 11, 0, 0, 0.}, {
      2020, 3, 12, 0, 0, 0.}, {2020, 3, 14, 0, 0, 0.}, {
      2020, 3, 15, 0, 0, 0.}, {2020, 3, 16, 0, 0, 0.}, {
      2020, 3, 17, 0, 0, 0.}, {2020, 3, 18, 0, 0, 0.}, {
      2020, 3, 19, 0, 0, 0.}, {2020, 3, 20, 0, 0, 0.}, {
      2020, 3, 21, 0, 0, 0.}, {2020, 3, 22, 0, 0, 0.}, {
      2020, 3, 23, 0, 0, 0.}, {2020, 3, 24, 0, 0, 0.}, {
      2020, 3, 25, 0, 0, 0.}, {2020, 3, 26, 0, 0, 0.}, {
      2020, 3, 27, 0, 0, 0.}, {2020, 3, 28, 0, 0, 0.}, {
      2020, 3, 29, 0, 0, 0.}, {2020, 3, 30, 0, 0, 0.}, {
      2020, 3, 31, 0, 0, 0.}, {2020, 4, 1, 0, 0, 0.}, {
      2020, 4, 2, 0, 0, 0.}, {2020, 4, 3, 0, 0, 0.}, {2020, 4, 4, 0, 0, 0.}, {
      2020, 4, 5, 0, 0, 0.}, {2020, 4, 6, 0, 0, 0.}, {2020, 4, 7, 0, 0, 0.}, {
      2020, 4, 8, 0, 0, 0.}, {2020, 4, 9, 0, 0, 0.}, {
      2020, 4, 10, 0, 0, 0.}, {2020, 4, 11, 0, 0, 0.}, {
      2020, 4, 12, 0, 0, 0.}, {2020, 4, 13, 0, 0, 0.}, {
      2020, 4, 14, 0, 0, 0.}, {2020, 4, 15, 0, 0, 0.}, {
      2020, 4, 16, 0, 0, 0.}, {2020, 4, 17, 0, 0, 0.}, {
      2020, 4, 18, 0, 0, 0.}, {2020, 4, 19, 0, 0, 0.}, {
      2020, 4, 20, 0, 0, 0.}, {2020, 4, 21, 0, 0, 0.}, {
      2020, 4, 22, 0, 0, 0.}, {2020, 4, 23, 0, 0, 0.}, {
      2020, 4, 24, 0, 0, 0.}, {2020, 4, 25, 0, 0, 0.}, {
      2020, 4, 26, 0, 0, 0.}, {2020, 4, 27, 0, 0, 0.}, {
      2020, 4, 28, 0, 0, 0.}, {2020, 4, 29, 0, 0, 0.}, {
      2020, 4, 30, 0, 0, 0.}, {2020, 5, 1, 0, 0, 0.}, {
      2020, 5, 2, 0, 0, 0.}, {2020, 5, 3, 0, 0, 0.}, {2020, 5, 4, 0, 0, 0.}, {
      2020, 5, 5, 0, 0, 0.}, {2020, 5, 6, 0, 0, 0.}, {2020, 5, 7, 0, 0, 0.}, {
      2020, 5, 8, 0, 0, 0.}, {2020, 5, 9, 0, 0, 0.}, {
      2020, 5, 10, 0, 0, 0.}, {2020, 5, 11, 0, 0, 0.}, {
      2020, 5, 12, 0, 0, 0.}, {2020, 5, 13, 0, 0, 0.}, {
      2020, 5, 14, 0, 0, 0.}, {2020, 5, 15, 0, 0, 0.}, {
      2020, 5, 16, 0, 0, 0.}, {2020, 5, 17, 0, 0, 0.}, {
      2020, 5, 18, 0, 0, 0.}, {2020, 5, 19, 0, 0, 0.}, {
      2020, 5, 20, 0, 0, 0.}, {2020, 5, 21, 0, 0, 0.}, {
      2020, 5, 22, 0, 0, 0.}, {2020, 5, 23, 0, 0, 0.}, {
      2020, 5, 24, 0, 0, 0.}, {2020, 5, 25, 0, 0, 0.}, {
      2020, 5, 26, 0, 0, 0.}, {2020, 5, 27, 0, 0, 0.}, {
      2020, 5, 28, 0, 0, 0.}, {2020, 5, 29, 0, 0, 0.}, {
      2020, 5, 30, 0, 0, 0.}, {2020, 5, 31, 0, 0, 0.}, {
      2020, 6, 1, 0, 0, 0.}, {2020, 6, 2, 0, 0, 0.}, {2020, 6, 3, 0, 0, 0.}, {
      2020, 6, 4, 0, 0, 0.}, {2020, 6, 5, 0, 0, 0.}, {2020, 6, 6, 0, 0, 0.}, {
      2020, 6, 7, 0, 0, 0.}, {2020, 6, 8, 0, 0, 0.}, {2020, 6, 9, 0, 0, 0.}, {
      2020, 6, 10, 0, 0, 0.}, {2020, 6, 11, 0, 0, 0.}, {
      2020, 6, 12, 0, 0, 0.}, {2020, 6, 13, 0, 0, 0.}, {
      2020, 6, 14, 0, 0, 0.}, {2020, 6, 15, 0, 0, 0.}, {
      2020, 6, 16, 0, 0, 0.}, {2020, 6, 17, 0, 0, 0.}, {
      2020, 6, 18, 0, 0, 0.}, {2020, 6, 19, 0, 0, 0.}, {
      2020, 6, 20, 0, 0, 0.}, {2020, 6, 21, 0, 0, 0.}, {
      2020, 6, 22, 0, 0, 0.}, {2020, 6, 23, 0, 0, 0.}, {
      2020, 6, 24, 0, 0, 0.}, {2020, 6, 25, 0, 0, 0.}, {
      2020, 6, 26, 0, 0, 0.}, {2020, 6, 27, 0, 0, 0.}, {
      2020, 6, 28, 0, 0, 0.}, {2020, 6, 29, 0, 0, 0.}, {
      2020, 6, 30, 0, 0, 0.}, {2020, 7, 1, 0, 0, 0.}, {
      2020, 7, 2, 0, 0, 0.}, {2020, 7, 3, 0, 0, 0.}, {2020, 7, 4, 0, 0, 0.}, {
      2020, 7, 5, 0, 0, 0.}, {2020, 7, 6, 0, 0, 0.}, {2020, 7, 7, 0, 0, 0.}, {
      2020, 7, 8, 0, 0, 0.}, {2020, 7, 9, 0, 0, 0.}, {
      2020, 7, 10, 0, 0, 0.}, {2020, 7, 11, 0, 0, 0.}, {
      2020, 7, 12, 0, 0, 0.}, {2020, 7, 13, 0, 0, 0.}, {
      2020, 7, 14, 0, 0, 0.}, {2020, 7, 15, 0, 0, 0.}, {
      2020, 7, 16, 0, 0, 0.}, {2020, 7, 17, 0, 0, 0.}, {
      2020, 7, 18, 0, 0, 0.}, {2020, 7, 19, 0, 0, 0.}, {
      2020, 7, 20, 0, 0, 0.}, {2020, 7, 21, 0, 0, 0.}, {
      2020, 7, 22, 0, 0, 0.}, {2020, 7, 23, 0, 0, 0.}, {
      2020, 7, 24, 0, 0, 0.}, {2020, 7, 25, 0, 0, 0.}, {
      2020, 7, 26, 0, 0, 0.}, {2020, 7, 27, 0, 0, 0.}, {
      2020, 7, 28, 0, 0, 0.}, {2020, 7, 29, 0, 0, 0.}, {
      2020, 7, 30, 0, 0, 0.}, {2020, 7, 31, 0, 0, 0.}}, CompressedData["
1:eJytzK8vBHAcBuCPc2dju83mxxxnHM4ck25TRIp6QRBuoyknKcoVRVEu+AME
hSSbmSiYSDFFsp1NQ/DYvuk2Cu/2pPfdW9raqTW6IuIwfs53n0t6KVKhyipr
bNBgjyYtzrjilhd6HJVZYp1djjjlggdyGRtWqHPAMXc8ke2OWKbGJtvs0+KE
cy655oZ7HnmmzStvvPPBJ5GNyNBHnn4GGGSIYUYoMMoYRcaZSCaTUjLVYTqZ
ofzPZpO5DpVk/hcLf7TIFzqnK4o=
     "], {0, 0, 0, 0, 3, 5, 6, 9, 10, 12, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
     0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 7, 
     9, 9, 10, 12, 16, 16, 22, 24, 24, 27, 28, 28, 29, 31, 37, 38, 41, 41, 44,
      46, 47, 47, 48, 48, 51, 51, 55, 55, 55, 55, 56, 57, 58, 58, 58, 58, 58, 
     59, 59, 59, 59, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 62, 62, 62, 62, 
     62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 63, 63, 
     63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 
     63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 64, 64, 64}, CompressedData["
1:eJytzytLA2AYBeBvc1MQvIBOvEx0zsmmmASLcSvWBYNBmM0yk8VisVgsC/sB
CyuazCJiXBDjLGIxCQo2NfgIX5pg0ReeduCcN7e7X60nQgin4ef1kWaAYUbI
kKXEGhU22abOIUc0OOeaW57pV1RgnS0OaHLGJfekkzKU2eGEFnc8kjJqgyo1
9jimQZsLrrihQ5cHnnjhlTfe+eDz+8lUCEkGGWKUMcbJMMEkU0wzQ5ZZ5qL5
KBct9MhHixT+2VJU7FGKln+x8kerfAGZbyu3
     "], CompressedData["
1:eJwl0XloCHAYxvHPasNoJEkiV60RItYcU/xB/qDkSI5yxSwyctSQcp+51ogY
csTWQgpJck6zNuYauWLuWMbcIm/tj+8fv96n5/e8z9tx2txROQnYEswMzgQv
EurpnVjPv6A2ibkNONyQg43ITmZkYy41YXwKs5qxrjm5LVjYkqrW1LRlaXsm
d+J3KtPT+NKFtO507sG3XvTL4ETf+C8zvAcxZHAwNDTDqBzBgtGkjGXzOJ5O
YOIk0qfSf3rMs/iRTffZlM8hc178OZ+SRWTk8nAxo5eSt4wZy0laRcc1vFxL
4npuBVkb472JKZv5ECWkb2Pgdtrl8Sjols+qHdzfyYBdsftu9u6Jvgoi2wH6
HIq8R9h1lFaFMSsivzh2Pc6xk5H7FF1Ph38UW3iWFeeYcJ42F1h+kY+XI99V
NlxjTAkV19lXStkN3pZF5nLWB4UVlN4MXWX43qboDvvvknMv5vfrGf6ArQ9Z
8ojnQfHj8HgSmmc0fM7GF3ytjpu+is5fc+UNPd9x831k+sDKj9TV0PQTqbWs
/kxBHR2+Meh73PsH1UHVz9D9im7/kPyX/zYMmUc=
     "]}}]]], "Output",
 CellChangeTimes->{3.8057134107430363`*^9},
 CellLabel->
  "Out[33]//TableForm=",ExpressionUUID->"e146fafe-d623-45d2-81f2-\
ea22e1d09782"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJxt1MtvTGEcxvE3VrO0sJiFxRCRiYgURV37uhfFqGIo7dFoUgkxcYl78pJi
UDULi1mehYWFpT/gXVp22eX8CV12ify+v8V5YpLJk8885zlz5rpp9sHE3LoQ
wtLf+7/8/211tOparHq9eEOsHleP1cc3SjbI7eRmcge5hdxDbiUPkU3LdAJv
w2fkvJeq540TeIjjr+KdeArvwtN4t2WewcOWxWz1Oss5vNeyMY/3WQ7u4hHO
fx/v53wdfMCy9RAfpH+EeR+KJ/gwxz/FRyw7z/Eo1/8CR8vll1wHLl/TH7Vs
Jnr3G/pjlvW39HgVh+OWYwv0uP6Ons+t+54e1z7Qn7RsdOnxykf6U5a9T/S4
9pn+NM+PE24s0o9Z9nHCI1/o+R71sX+v1rw/y+tZosdtHM5Z/vYer3k/bjn0
lR4/w+E8j3uP+95fsFz2Hq94f9Fy4D0OPbJlWcMRN3HCwzjj6Ht+V+O+xy3f
40nf47bv+R0Wvsd3fI/nfY/v+f6yZcf3+LHv8Svfi8Mkx/lenPCC78XhimXX
9+IkzuLA/86i78X+v9TzPf7m+2tVR3ESZ3Foy16cxFkcrstenMRZHG7IXpzE
WRymZC9O4oz7vr9ZdcSl78VZHG5VHfF334sz/uH76aqjOImzOMzIXpzwT9+L
Q1F1QxzFhTiJS3EWD8Thtjy/OIoLcRKX4ox/9eIf5XIiWw==
       "]]}, {
      {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}, {
      {RGBColor[0, 0, 1], PointSize[0.009166666666666668], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
d1vI9wT4HyCdd3Q=
        "]]},
      Annotation[#, "Charting`Private`Tag$6026#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Infections\"", TraditionalForm], None}, {
     FormBox["\"Days since March 16, 2020\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Nova Scotia; Infections vs. Time\\nwith 5th Order Polynomial Fit\"", 
    TraditionalForm],
  PlotRange->{{0, 142.}, {0, 1069.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.805713411884634*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"8c3f9a77-bc58-4184-97f7-29dfb6d13379"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
xieV6iP2W22AyBDlN7f7zSgU+GFuZYzxmGgToX3jDJcWPXbjYHTbT5lUpQFG
mdXICZU2dE5yvYPPWUbqyJ6UpfZ/9fe+/HwmhHk0pqXgVSf6aOXbs15XmPLl
5Z3ufej2ru0zd+4zr0mc000ZQyeS3w6JVDNP/9zEMkW2BZKdree9+XfMnYl7
4p4oo9X3iUU/62ZukWnJiVJFZ/53IjWvh8lBbK+w0LCFKHsl7j1mvUxiSmHk
Gw399MGApFofU3X3/I61xpgfuvfZJpYBpsiWq3zBrhgPcRpkOTfE/NbQfEUr
HuOvjq+saI8zI0oUnjAS0fvtJvrzx5lCN2JbTC6if5zJpon+ZJoG6/A4XUZ/
9tlsOvuTWSh9Lzr0Jta7tap+3G6CGRR9yreiAm0ZPXd04TeTlb7VgD6C+aXd
OzUEZ5jXZOL3GY5j3KIkMsBwhqm+5lv4jgl0chWf17EZpuePjKe7Z9EF2i4x
72eYr6+yK4WT7YDEe7npROwsM2W6S7hqHTp7daDL9z9MqQfnx/V22EFUc9YH
7uPzzGS1qh6qJbrriPtg5jxzufxni6o1OszdKIKYZ3bWWJfJOKKpldKD3AvM
tA7hU7z7sV6T35fL1xaYHOy3+bvD0L7rtkeVLDKDEj6R2yPQW/QGVD8tMvv5
KDMtUeicYeqt2UUmc51PR10seiZ9UxV1iRm6bVtuUQrWv/28uq1iiTm6+7la
RAHGObjz8oqXmS5945tDitCv7slqNy0zGz0lRAIeYn6n2Je4kWXm7YDTiwfK
0FEcfzykV5h7z5nWWbzE/JKdnKyXV5jNjz86iH3BeIm65ZI6idCjcpgJfUVf
uFldoU8iCqu06Py9aN61qfaWJCK+MVOCbcgOYLEoXOEQiTDodhse/Y0uGxm0
ukoinnCNn3jGZQ+EdXNb7G8SwdY0Jneaxx77+9LtmAUSYZc89tmUzx6ichPc
PNlZiGmhMY02QXRAStknERZCQ3r094QEesHk4AE9FqJM74e3jCaOrxLXN45h
ITjIP0TGqVh/Ns3ybCIL4VA33FBCx7hH7rV7aSzE7I7hzfr69gBzJ/mv3WYh
tJy/9+22wPhtsynNGhaiPHDQ+ZIH1s8ozdNfYCE4tQY5nQ5i/IrqoQYWMuE0
/+3pBi8c/+pDjQonmZiL+ra28AjGP3IfeSJIJrQvDLTUh2LcTVfpmCKZSLAe
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
       "]]},
     Annotation[#, "Charting`Private`Tag$7440#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Infections\"", TraditionalForm], None}, {
     FormBox["\"Days since March 16, 2020\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Derivative: Nova Scotia Infections vs. Time\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8057134120303783`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"3872e76b-ce85-456a-a89e-25e31cf52436"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
     PointBox[CompressedData["
1:eJxdzXtMlXUcx/EnjCSVOAYiCgVBOg1GwIm4Ch9ADkeQyzkQyi2PGBNXpBJh
0dAnKiWn2RQZS8WTS26RksCCkfRsoMjVjKsGiBowW9qkSZIg1fh9/+D7bL89
e+39++z3UupOfZqJJEkH/zv//+c+Kyxe8F3O78ceBM7ZBurD9/4OUqaE7bAp
0eNcpuOssANKG/qt2+xMMWdH2GsjfawryC/j+3M7C1yTzIRXwym8sC+xbJHw
GkRVfhGaVmsu/ApmJd2sIctC2AU+XQ3GyyMqYVeMveqofnftUmE3qFzcbbtm
ye5w13xVH975vLAHIqofhOu8LIXVCHY1FGQayK/hfkbzQ/Uk2RMHcpo/eHTS
Svh1pEatLXuyZJmwF3KTAv1r4sjeePjDZ/WTN8g+MFqYrJwOtRb2hWnWC877
6sh+8IaTCSbI/khw9DYOxC8XXgefsB5cOE8OwKezg/pnnrURDkR/b27bQX8y
EHK//HjGW8IykOXjm295lnoQnrLK/+vJDPUgHL2Xvmav3wrRg7HqSI9marew
HAz34JJVZ43UQ2B/aX9v/xj1ENzOf9Svslgp+nrkVYyqjumF5fXorhzvWLKD
eiiGB8e3HymiHoqnncvczW5S1+B4ZLe//WPqGnQP/TRpZm4rehhyO/002dbC
chhO9C2eKvGkroWdqn5hgYa6FlUBdb51ydQ3YF1Tu3/LDuoboF6euroym3o4
bl1Zpv0zh3o4Jq3zFqR/Qj0Czx3YV6I6Sj0C2YfeP60tor4RpSa7WnNPU9+I
P/ZYep0vox4JS09DenU59Ujc/TFvV2Ml9SjEXFD7Xq2mHoXICtuTP9dQj4Y2
M/XitVrq0Xj7Sl1jdz31GNhtuxPQ3SCMGAQmbY9taaL7MWj71qKj8bKwEoMM
zVLLmlba69CUW+Zc2kF7HVQW06lnOmmvw+ebLyaf6qK9DoEfL1pRdJX2etgV
K9cPXaO9HraZacP7f6G9Hm6j5iVyN+31+Lqq3y2nh/axmNkzsve9XtrHQt0a
+uU7fbSPhbb3xEzKAO2ZpTgUoyUh/jrtmeU43C1s/jDqBu2ZpTfg+rgqRfMr
7ZllZoVZikf0R+WmAYO0Z5bj8aKqfbfnEO3jkXnK44zLMO03zTeYZWaFWdrM
9swys8IsJbA9s8ysMEuJbM8sMyvMUhLbM8vMShL8J6YLnW7SPnm+kYyxSy5d
qlu0Z1aYpZT5RgoGctpVC2/TnllJweFtgTYzZOnN+QazzKwwS1vYnlneguLx
b36buEN7Zskw3w7MYDYwy8xGZoV5hFnayt5nBrOBWWY2Mitb4fBPbcfQqC3+
Be6AbA0=
      "]]}, {
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6]}, {}}, {
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 4.201927155275875},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Ln Infections\"", TraditionalForm], None}, {
     FormBox["\"Days since March 16, 2020\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Ln Infections vs. Time; Nova Scotia\"", TraditionalForm],
  PlotRange->{{0, 142.}, {4.201927155275875, 6.974478911025045}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.805713412307166*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"f96962f2-484d-41ef-a32b-5ffbe7841d2e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Future work.", "Subsubsection",
 CellChangeTimes->{{3.797159757868321*^9, 
  3.797159759883276*^9}},ExpressionUUID->"b53f9aad-f760-4eaf-81f5-\
68036bd8f873"],

Cell["\<\
Extend to all provinces. 

Compute active cases vs. time. 

Present death vs. time. \
\>", "Text",
 CellChangeTimes->{{3.805713457557846*^9, 
  3.805713511454997*^9}},ExpressionUUID->"135d09f3-c506-4888-a4a7-\
5e87d0609224"]
}, Open  ]]
},
WindowSize->{628.5, 703.5},
WindowMargins->{{Automatic, 5.25}, {-3.75, Automatic}},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d619e839-971d-4456-99f8-713085fb0c73"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 275, 4, 78, "Subsubsection",ExpressionUUID->"962fa068-efd9-4cb9-a1d4-84633c2d579c"],
Cell[CellGroupData[{
Cell[880, 30, 14265, 330, 1845, "Input",ExpressionUUID->"8434aa7e-9c92-4c72-a328-54930258540d"],
Cell[15148, 362, 27558, 1042, 1939, "Output",ExpressionUUID->"e146fafe-d623-45d2-81f2-ea22e1d09782"],
Cell[42709, 1406, 15826, 280, 283, "Output",ExpressionUUID->"8c3f9a77-bc58-4184-97f7-29dfb6d13379"],
Cell[58538, 1688, 14146, 252, 271, "Output",ExpressionUUID->"3872e76b-ce85-456a-a89e-25e31cf52436"],
Cell[72687, 1942, 3000, 67, 268, "Output",ExpressionUUID->"f96962f2-484d-41ef-a32b-5ffbe7841d2e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75736, 2015, 163, 3, 45, "Subsubsection",ExpressionUUID->"b53f9aad-f760-4eaf-81f5-68036bd8f873"],
Cell[75902, 2020, 234, 9, 127, "Text",ExpressionUUID->"135d09f3-c506-4888-a4a7-5e87d0609224"]
}, Open  ]]
}
]
*)

